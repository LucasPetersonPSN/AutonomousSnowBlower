#!/usr/bin/env python2
import rospy
from std_msgs.msg import String
from serial_communication.msg import ultrasonic_data
import serial

ser = serial.Serial("/dev/ttyACM0", 9600, timeout=1)

def callback(data):
    rospy.loginfo("Sent %s to Arduino", data.data)
    ser.write(data.data.encode('utf-8'))

def main_loop():
   rospy.init_node('serial_pubsub', anonymous=True)
    
    # Ensure the subscriber is set up before entering the loop
    rospy.Subscriber('user_input', String, callback, queue_size=10)  
    rospy.loginfo("Started serial_pubsub node")

    pub = rospy.Publisher('raw_ultrasonic_data', ultrasonic_data, queue_size=10)
    rate = rospy.Rate(15)

    previousL = 0
    previousR = 0
    previousB = 0

    while not rospy.is_shutdown():
        data = ser.readline().decode('utf-8').strip()
        if data:
            msg = ultrasonic_data()
            if "L" in data:
                msg.l = previousL = int(data[1:])
                msg.r = previousR
                msg.b = previousB
            elif "R" in data:
                msg.l = previousL
                msg.r = previousR = int(data[1:])
                msg.b = previousB
            elif "B" in data:
                msg.l = previousL
                msg.r = previousR
                msg.b = previousB = int(data[1:])
            
            pub.publish(msg)
            rate.sleep()

    rospy.spin()  # Keep the subscriber running

if __name__ == '__main__':
    try:
        main_loop()
    except rospy.ROSInterruptException:
        pass

